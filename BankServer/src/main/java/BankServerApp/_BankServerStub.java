package BankServerApp;


/**
* BankServerApp/_BankServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from BankServer.idl
* Friday, October 11, 2019 10:45:23 AM FJT
*/

public class _BankServerStub extends org.omg.CORBA.portable.ObjectImpl implements BankServerApp.BankServer
{

  public boolean checkAcntNum (int acntNum)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkAcntNum", true);
                $out.write_long (acntNum);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkAcntNum (acntNum        );
            } finally {
                _releaseReply ($in);
            }
  } // checkAcntNum

  public boolean checkAcntStatus (int acntNum)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkAcntStatus", true);
                $out.write_long (acntNum);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkAcntStatus (acntNum        );
            } finally {
                _releaseReply ($in);
            }
  } // checkAcntStatus

  public boolean verifyAcntPin (int acntNum, int acntPin)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("verifyAcntPin", true);
                $out.write_long (acntNum);
                $out.write_long (acntPin);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return verifyAcntPin (acntNum, acntPin        );
            } finally {
                _releaseReply ($in);
            }
  } // verifyAcntPin

  public void lockAcnt (int acntNum)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("lockAcnt", true);
                $out.write_long (acntNum);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                lockAcnt (acntNum        );
            } finally {
                _releaseReply ($in);
            }
  } // lockAcnt

  public void makeDeposit (int acntNum, int amount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("makeDeposit", true);
                $out.write_long (acntNum);
                $out.write_long (amount);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                makeDeposit (acntNum, amount        );
            } finally {
                _releaseReply ($in);
            }
  } // makeDeposit

  public void makeWithdrawal (int acntNum, int amount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("makeWithdrawal", true);
                $out.write_long (acntNum);
                $out.write_long (amount);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                makeWithdrawal (acntNum, amount        );
            } finally {
                _releaseReply ($in);
            }
  } // makeWithdrawal

  public double checkBalance (int acntNum)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkBalance", true);
                $out.write_long (acntNum);
                $in = _invoke ($out);
                double $result = $in.read_double ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkBalance (acntNum        );
            } finally {
                _releaseReply ($in);
            }
  } // checkBalance

  public boolean checkOverdraft (int acntNum, double amount)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkOverdraft", true);
                $out.write_long (acntNum);
                $out.write_double (amount);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkOverdraft (acntNum, amount        );
            } finally {
                _releaseReply ($in);
            }
  } // checkOverdraft

  public void getTransactions (int acntNum, String startDate, String endDate, String emailAddr)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTransactions", true);
                $out.write_long (acntNum);
                $out.write_wstring (startDate);
                $out.write_wstring (endDate);
                $out.write_wstring (emailAddr);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getTransactions (acntNum, startDate, endDate, emailAddr        );
            } finally {
                _releaseReply ($in);
            }
  } // getTransactions

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:BankServerApp/BankServer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _BankServerStub
